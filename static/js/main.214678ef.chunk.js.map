{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/copyrights.js","app.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","style","backgroundColor","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","death","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","linechart","length","labels","datasets","label","borderColor","fill","barchar","hoverBackgroundColor","CountryPicker","handleCountryChange","Countries","setCountries","fetchCountriesApi","FormControl","formcontrol","NativeSelect","defaultValue","onChange","e","target","opt","key","CopyRights","App","state","fetchedData","setState","this","Styles","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.214678ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"death\":\"Cards_death__207V6\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\nimport cx from 'classnames';\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed){\n        return 'loading....';\n    }\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)} style={{backgroundColor: 'rgba(255,255,255, 0.92)'}}>\n                    <CardContent>\n\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0}  end={confirmed.value} duration={2.5} separator=',' />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} </Typography>\n                        <br/>\n                        <Typography variant='body2'> Number of Active cases </Typography>\n\n                    </CardContent>\n\n                </Grid>\n\n                <Grid item component={Card } xs={12} md={3} className={cx(styles.card, styles.recovered)} style={{backgroundColor: 'rgba(255,255,255, 0.92)'}}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0}  end={recovered.value} duration={2.5} separator=',' />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} </Typography>\n                        <br/>\n                        <Typography variant='body2'> Number of Recovered cases </Typography>\n\n                    </CardContent>\n\n                </Grid>\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.death)} style={{backgroundColor: 'rgba(255,255,255, 0.92)'}}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Death</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0}  end={deaths.value} duration={2.5} separator=',' />\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()} </Typography>\n                        <br/>\n                        <Typography variant='body2'> Number of Death caused by covid-19 </Typography>\n\n                    </CardContent>\n\n                </Grid>\n            </Grid>\n           \n        </div>\n    );\n}\n\nexport default Cards;"," import axios from 'axios';\n\n const url = 'https://covid19.mathdro.id/api';\n\nexport  const fetchData = async (country) =>{\n     let changeableUrl = url;\n     if(country){\n         changeableUrl = `${url}/countries/${country}`\n          \n     }\n       try {\n           const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\n           \n           return {confirmed, recovered, deaths, lastUpdate};\n           \n       } catch(error){\n        console.log(error);\n       }\n   } \n\nexport const fetchDailyData = async () => {\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n\n        const modifiedData = data.map((dailyData)=>({\n            confirmed : dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n\n        return modifiedData;\n         \n    }catch(error){\n        console.log(error);\n\n    }\n} \n\n\nexport const fetchCountries = async () => {\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=> country.name)\n    } catch(error){\n        console.log(error);\n    }\n}","import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport {Line, Bar } from 'react-chartjs-2';\n\n\n import styles from './Chart.module.css';\n \nconst Chart = ({data:{confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n       \n        fetchAPI();\n    },[]);\n\n    const linechart = (\n      dailyData.length?\n\n      (<Line data={{\n          labels: dailyData.map(({date}) => date),\n            datasets: [{\n              data: dailyData.map(({confirmed})=> confirmed),\n              label: 'Infected',\n              borderColor: '#3333ff',\n              fill: true\n             },{\n                 data: dailyData.map(({deaths})=> deaths),\n                 label: 'Deaths',\n                 borderColor: 'red',\n                 backgroundColor: 'rgba(255, 0 , 0 , 0.5)',\n                 fill: true\n\n            }]\n      }}  \n    />) : null\n    );\n\n    console.log(confirmed, recovered, deaths);\n    const barchar = (\n        confirmed \n        ? ( <Bar   \n\n            data={{\n                labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n                datasets: [\n                    {\n                    label: 'total',\n                    data: [confirmed.value, recovered.value, deaths.value],\n                    backgroundColor: [ 'rgba(0,0,255,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                    hoverBackgroundColor: ['rgba(0,0,255,0.7)', 'rgba(0, 255, 0, 0.722)', 'rgba(255, 0, 0, 0.752)']\n                    }\n                ]\n            }}\n                // data={{\n                //     lables: ['Infected', 'Recovered', 'Deaths'],\n                //     datasets: [{\n                //         label: 'people',\n                //         backgroundColor: [\n                //             'rgba(0,0,255,0.5)',\n                //             'rgba(0, 255, 0, 0.664)',\n                //             'rgba(255, 0, 0, 0.692)'\n                //         ],\n                //         data: [confirmed.value, recovered.value, deaths.value],\n                        \n                //     }]\n\n                // }}\n                // options={{\n                //     legend: {display: false},\n                //     title: {display: true, text: `Current state in ${country}`}\n                // }}\n            /> \n        ): null\n    )\n\n    return(\n        <div className={styles.container}>\n            {country? barchar : linechart}\n           \n           \n        </div>\n    );\n}\n\nexport default Chart;","import React , {useState , useEffect}from 'react';\nimport {NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport {fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [Countries, setCountries] = useState([]);\n\n    useEffect (()=>{\n        const fetchCountriesApi = async () => {\n            setCountries(await fetchCountries());\n        }\n\n        fetchCountriesApi();\n    },[setCountries]);\n\n    return(\n        <div>\n           \n           <FormControl className={styles.formcontrol }>\n               <NativeSelect className={styles.a }defaultValue='' onChange={(e)=>{handleCountryChange(e.target.value)}}>\n                   <option className={styles.opt } value=''>Global</option>\n                  {Countries.map(country=>(<option key={country} value={country} className={styles.opt }>{country}</option>))}\n               </NativeSelect>\n           </FormControl>\n        </div>\n    );\n}\n\nexport default CountryPicker;","import React from 'react'; \n\nfunction CopyRights(){\n    return(\n        <div style={{color: 'gray'}}>\n            <p>This WebSite Designed by Medo Saleh &copy;</p>\n        </div>\n    );\n}\n\nexport default CopyRights;","import React from 'react';\n\nimport Cards from './components/Cards/Cards';\nimport Chart from './components/Chart/Chart';\nimport CountryPicker from './components/CountryPicker/CountryPicker';\nimport CopyRights from './components/copyrights';\n\nimport Styles from './App.module.css';\n\nimport {fetchData} from './api';\n\n\n\n\nclass App extends React.Component{\n\n    state = {\n        data: {},\n        country:''\n    }\n\n    async componentDidMount(){\n        const fetchedData  = await fetchData();\n\n        this.setState({data: fetchedData});\n      \n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data: fetchedData, country: country})\n        console.log()\n\n    }\n    render(){\n        const {data, country} = this.state;\n        return(\n            <div className={Styles.container}>\n                {country? <h1 style={{color:'white'}}>Coivd-19 <span style={{color: 'rgba(0,0,255,0.8)'}}>{country}</span> Data</h1> \n                : <h1 style={{color:'white'}}> Coivd-19 <span style={{color: 'rgba(0,0,255,0.8)'}}>World </span> Data</h1>}\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n\n                {console.log(this.state.data)}\n                \n                <CopyRights/>\n                \n            </div>\n        );\n    }\n}\n\nexport default App;","import React from  'react';\nimport ReactDOM from 'react-dom';\n\n import App from './app';\n\n ReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"CountryPicker_a__MJKA8\",\"opt\":\"CountryPicker_opt__2_75V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}